C51 COMPILER V9.54   LCD                                                                   10/13/2015 11:38:06 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN LCD.obj
COMPILER INVOKED BY: C:\Keil_c51\C51\BIN\C51.EXE LCD\LCD.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\LCD
                    -.lst) TABS(2) OBJECT(LCD.obj)

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #include <font\font.h>
   4          #include <sys\sys.h>
   5          #include <lcd\lcd.h>
   6          #include <PCF8574T\PCF8574T.h>
   7          /* http://ttmcu.taobao.com 雨亭电子
   8          代码测试环境:JME-2核心板+1T指令周期的STC单片机（51内核STC12LE5A60S2)+33M晶振    单片机工作电压3.3V
   9          程序默认IO连接方式：
  10          控制线：RS-P3^5;    WR-P3^6;   RD-P3^7;   CS-P1^0;   REST-P1^2;
  11          数据线: DB0-DB7依次连接P0^0-P0^7;  DB8-DB15依次连接P2^0-P2^7;（8位模式下DB0-DB7可以不连接）
  12          触摸功能连接方式：(不使用触摸可不连接)
  13          D_CLK-P1^7;  D_CS-P1^4;  D_DIN-P3^0;  D_OUT-P3^1;  D_PENIRQ-P3^4;
  14          */
  15          
  16          #define PCF8574_SlaveAddress 0x20
  17          
  18          //#define PCF8574_SlaveAddress UA_PCF8574_SlaveAddress
  19          
  20          u16 BACK_COLOR, POINT_COLOR;   //背景色，画笔色
  21          
  22          u16  HDP=479;
  23          u16  HT=531;
  24          u16  HPS=43;
  25          u16  LPS=8;
  26          u8   HPW=10;
  27          
  28          u16  VDP=271;
  29          u16  VT=288;
  30          u16  VPS=12;
  31          u16  FPS=4;
  32          u8   VPW=10;
  33          
  34          
  35          #ifdef  Bus_16    //条件编译-16位数据模式   
  36          void LCD_Writ_Bus(char VH,char VL)   //并行数据写入函数
  37          {
  38   1          LCD_DataPortH=VH; 
  39   1        LCD_DataPortL=VL;   
  40   1        LCD_WR=0;
  41   1        LCD_WR=1; 
  42   1      }
  43          #else     //条件编译-8位数据模式 
              void LCD_Writ_Bus(char VH,char VL)   //并行数据写入函数
              { 
                  LCD_DataPortH=VH; 
                  LCD_WR=0;
                LCD_WR=1;
                LCD_DataPortH=VL;   
                LCD_WR=0;
                LCD_WR=1;
              }
              #endif
  54          void LCD_WR_DATA8(char VH,char VL) //发送数据-8位参数
C51 COMPILER V9.54   LCD                                                                   10/13/2015 11:38:06 PAGE 2   

  55          {
  56   1          LCD_RS=1;
  57   1        LCD_Writ_Bus(VH,VL);
  58   1      }  
  59           void LCD_WR_DATA(int da)
  60          {
  61   1          LCD_RS=1;
  62   1        LCD_Writ_Bus(da>>8,da);
  63   1      }   
  64          void LCD_WR_REG(int da)  
  65          { 
  66   1          LCD_RS=0;
  67   1        LCD_Writ_Bus(da>>8,da);
  68   1      }
  69           void LCD_WR_REG_DATA(int reg,int da)
  70          {
  71   1          LCD_WR_REG(reg);
  72   1        LCD_WR_DATA(da);
  73   1      }
  74          
  75          void Address_set(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2)
  76          { 
  77   1        LCD_WR_REG(0x002A); 
  78   1        LCD_WR_DATA(x1>>8);     
  79   1        LCD_WR_DATA(x1&0x00ff);
  80   1        LCD_WR_DATA(x2>>8);     
  81   1        LCD_WR_DATA(x2&0x00ff);
  82   1          LCD_WR_REG(0x002b); 
  83   1        LCD_WR_DATA(y1>>8);     
  84   1        LCD_WR_DATA(y1&0x00ff);
  85   1        LCD_WR_DATA(y2>>8);     
  86   1        LCD_WR_DATA(y2&0x00ff);
  87   1        LCD_WR_REG(0x002c);                      
  88   1      }
  89          void Lcd_Init(void)
  90          {
  91   1      #if 1
  92   1      //调用一次这些函数，免得编译的时候提示警告
  93   1          //LCD_CS =1;
  94   1        PCF8574_Single_WriteI2C((UA_PCF8574_SlaveAddress ),0);    //影响步进电机的驱动
  95   1      
  96   1      //  if(LCD_CS==0)
  97   1      //  {
  98   1           LCD_WR_REG_DATA(0,0);
  99   1           LCD_ShowString(0,0," ");
 100   1           LCD_ShowNum(0,0,0,0);
 101   1           LCD_Show2Num(0,0,0,0);
 102   1           LCD_DrawPoint_big(0,0);
 103   1           LCD_DrawRectangle(0,0,0,0);
 104   1           Draw_Circle(0,0,0);
 105   1      //   }
 106   1      
 107   1          LCD_REST=1;
 108   1          delayms(5); 
 109   1        LCD_REST=0;
 110   1        delayms(5);
 111   1        LCD_REST=1;
 112   1      //  LCD_CS=1;
 113   1      PCF8574_Single_WriteI2C((PCF8574_SlaveAddress),0xff);
 114   1        LCD_RD=1;
 115   1        LCD_WR=1;
 116   1        delayms(5);
C51 COMPILER V9.54   LCD                                                                   10/13/2015 11:38:06 PAGE 3   

 117   1      //  LCD_CS =0;  //打开片选使能
 118   1      PCF8574_Single_WriteI2C((PCF8574_SlaveAddress ),0);
 119   1      
 120   1        LCD_WR_REG(0x00E2); //PLL multiplier, set PLL clock to 120M
 121   1        LCD_WR_DATA(0x002d);      //N=0x36 for 6.5M, 0x23 for 10M crystal
 122   1        LCD_WR_DATA(0x0002);
 123   1        LCD_WR_DATA(0x0004);
 124   1        LCD_WR_REG(0x00E0);  // PLL enable
 125   1        LCD_WR_DATA(0x0001);
 126   1        delayms(1);
 127   1        LCD_WR_REG(0x00E0);
 128   1        LCD_WR_DATA(0x0003);
 129   1        delayms(5);
 130   1        LCD_WR_REG(0x0001);  // software reset
 131   1        delayms(5);
 132   1        LCD_WR_REG(0x00E6); //PLL setting for PCLK, depends on resolution
 133   1        LCD_WR_DATA(0x0000);
 134   1        LCD_WR_DATA(0x00ff);
 135   1        LCD_WR_DATA(0x00be);
 136   1      
 137   1        LCD_WR_REG(0x00B0); //LCD SPECIFICATION
 138   1        LCD_WR_DATA(0x0020);
 139   1        LCD_WR_DATA(0x0000);
 140   1        LCD_WR_DATA((HDP>>8)&0X00FF);  //Set HDP
 141   1        LCD_WR_DATA(HDP&0X00FF);
 142   1          LCD_WR_DATA((VDP>>8)&0X00FF);  //Set VDP
 143   1        LCD_WR_DATA(VDP&0X00FF);
 144   1          LCD_WR_DATA(0x0000);
 145   1        delayms(5);
 146   1        LCD_WR_REG(0x00B4); //HSYNC
 147   1        LCD_WR_DATA((HT>>8)&0X00FF);  //Set HT
 148   1        LCD_WR_DATA(HT&0X00FF);
 149   1        LCD_WR_DATA((HPS>>8)&0X00FF);  //Set HPS
 150   1        LCD_WR_DATA(HPS&0X00FF);
 151   1        LCD_WR_DATA(HPW);        //Set HPW
 152   1        LCD_WR_DATA((LPS>>8)&0X00FF);  //SetLPS
 153   1        LCD_WR_DATA(LPS&0X00FF);
 154   1        LCD_WR_DATA(0x0000);
 155   1      
 156   1        LCD_WR_REG(0x00B6); //VSYNC
 157   1        LCD_WR_DATA((VT>>8)&0X00FF);   //Set VT
 158   1        LCD_WR_DATA(VT&0X00FF);
 159   1        LCD_WR_DATA((VPS>>8)&0X00FF);  //Set VPS
 160   1        LCD_WR_DATA(VPS&0X00FF);
 161   1        LCD_WR_DATA(VPW);        //Set VPW
 162   1        LCD_WR_DATA((FPS>>8)&0X00FF);  //Set FPS
 163   1        LCD_WR_DATA(FPS&0X00FF);
 164   1      
 165   1      
 166   1        LCD_WR_REG(0x0036); //rotation
 167   1        LCD_WR_DATA(0x0000);
 168   1      
 169   1        LCD_WR_REG(0x00F0); //pixel data interface
 170   1        LCD_WR_DATA(0x0003);
 171   1      
 172   1      
 173   1        delayms(5);
 174   1      
 175   1      
 176   1        LCD_WR_REG(0x0029); //display on
 177   1      
 178   1        LCD_WR_REG(0x00BE); //set PWM for B/L
C51 COMPILER V9.54   LCD                                                                   10/13/2015 11:38:06 PAGE 4   

 179   1        LCD_WR_DATA(0x0006);
 180   1        LCD_WR_DATA(0x00f0);
 181   1        LCD_WR_DATA(0x0001);
 182   1        LCD_WR_DATA(0x00f0);
 183   1        LCD_WR_DATA(0x0000);
 184   1        LCD_WR_DATA(0x0000);
 185   1      
 186   1        LCD_WR_REG(0x00d0); 
 187   1        LCD_WR_DATA(0x000d);
 188   1      
 189   1          //----------LCD RESET---GPIO0-------------------//
 190   1        LCD_WR_REG(0x00B8);
 191   1        LCD_WR_DATA(0x0000);    //GPIO3=input, GPIO[2:0]=output
 192   1        LCD_WR_DATA(0x0001);    //GPIO0 normal
 193   1      
 194   1        LCD_WR_REG(0x00BA);
 195   1        LCD_WR_DATA(0x0000);  
 196   1      #endif
 197   1      }
 198          
 199          
 200          //清屏函数
 201          //Color:要清屏的填充色
 202          void LCD_Clear(u16 Color)
 203          {
 204   1        u8 VH,VL;
 205   1        u16 i,j;
 206   1        VH=Color>>8;
 207   1        VL=Color; 
 208   1        Address_set(0,0,LCD_W-1,LCD_H-1);
 209   1          for(i=0;i<LCD_W;i++)
 210   1         {
 211   2          for (j=0;j<LCD_H;j++)
 212   2            {
 213   3                 LCD_WR_DATA8(VH,VL);
 214   3            }
 215   2      
 216   2          }
 217   1      }
 218          //在指定位置显示一个汉字(32*33大小)
 219          //dcolor为内容颜色，gbcolor为背静颜色
 220          void showhanzi(unsigned int x,unsigned int y,unsigned char index) 
 221          {  
 222   1        unsigned char i,j;
 223   1        unsigned char *temp=hanzi;    
 224   1          Address_set(x,y,x+31,y+31); //设置区域      
 225   1        temp+=index*128;  
 226   1        for(j=0;j<128;j++)
 227   1        {
 228   2          for(i=0;i<8;i++)
 229   2          {          
 230   3            if((*temp&(1<<i))!=0)
 231   3            {
 232   4              LCD_WR_DATA(POINT_COLOR);
 233   4            } 
 234   3            else
 235   3            {
 236   4              LCD_WR_DATA(BACK_COLOR);
 237   4            }   
 238   3          }
 239   2          temp++;
 240   2         }
C51 COMPILER V9.54   LCD                                                                   10/13/2015 11:38:06 PAGE 5   

 241   1      }
 242          //画点
 243          //POINT_COLOR:此点的颜色
 244          void LCD_DrawPoint(u16 x,u16 y)
 245          {
 246   1        Address_set(x,y,x,y);//设置光标位置 
 247   1        LCD_WR_DATA(POINT_COLOR);       
 248   1      }    
 249          //画一个大点
 250          //POINT_COLOR:此点的颜色
 251          void LCD_DrawPoint_big(u16 x,u16 y)
 252          {
 253   1        LCD_Fill(x-1,y-1,x+1,y+1,POINT_COLOR);
 254   1      } 
 255          //在指定区域内填充指定颜色
 256          //区域大小:
 257          //  (xend-xsta)*(yend-ysta)
 258          void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
 259          {          
 260   1        u16 i,j; 
 261   1        Address_set(xsta,ysta,xend,yend);      //设置光标位置 
 262   1        for(i=ysta;i<=yend;i++)
 263   1        {                               
 264   2          for(j=xsta;j<=xend;j++)LCD_WR_DATA(color);//设置光标位置      
 265   2        }                   
 266   1      }  
 267          //画线
 268          //x1,y1:起点坐标
 269          //x2,y2:终点坐标  
 270          void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
 271          {
 272   1        u16 t; 
 273   1        int xerr=0,yerr=0,delta_x,delta_y,distance; 
 274   1        int incx,incy,uRow,uCol; 
 275   1      
 276   1        delta_x=x2-x1; //计算坐标增量 
 277   1        delta_y=y2-y1; 
 278   1        uRow=x1; 
 279   1        uCol=y1; 
 280   1        if(delta_x>0)incx=1; //设置单步方向 
 281   1        else if(delta_x==0)incx=0;//垂直线 
 282   1        else {incx=-1;delta_x=-delta_x;} 
 283   1        if(delta_y>0)incy=1; 
 284   1        else if(delta_y==0)incy=0;//水平线 
 285   1        else{incy=-1;delta_y=-delta_y;} 
 286   1        if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 287   1        else distance=delta_y; 
 288   1        for(t=0;t<=distance+1;t++ )//画线输出 
 289   1        {  
 290   2          LCD_DrawPoint(uRow,uCol);//画点 
 291   2          xerr+=delta_x ; 
 292   2          yerr+=delta_y ; 
 293   2          if(xerr>distance) 
 294   2          { 
 295   3            xerr-=distance; 
 296   3            uRow+=incx; 
 297   3          } 
 298   2          if(yerr>distance) 
 299   2          { 
 300   3            yerr-=distance; 
 301   3            uCol+=incy; 
 302   3          } 
C51 COMPILER V9.54   LCD                                                                   10/13/2015 11:38:06 PAGE 6   

 303   2        }  
 304   1      }    
 305          //画矩形
 306          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 307          {
 308   1        LCD_DrawLine(x1,y1,x2,y1);
 309   1        LCD_DrawLine(x1,y1,x1,y2);
 310   1        LCD_DrawLine(x1,y2,x2,y2);
 311   1        LCD_DrawLine(x2,y1,x2,y2);
 312   1      }
 313          //在指定位置画一个指定大小的圆
 314          //(x,y):中心点
 315          //r    :半径
 316          void Draw_Circle(u16 x0,u16 y0,u8 r)
 317          {
 318   1        int a,b;
 319   1        int di;
 320   1        a=0;b=r;    
 321   1        di=3-(r<<1);             //判断下个点位置的标志
 322   1        while(a<=b)
 323   1        {
 324   2          LCD_DrawPoint(x0-b,y0-a);             //3           
 325   2          LCD_DrawPoint(x0+b,y0-a);             //0           
 326   2          LCD_DrawPoint(x0-a,y0+b);             //1       
 327   2          LCD_DrawPoint(x0-b,y0-a);             //7           
 328   2          LCD_DrawPoint(x0-a,y0-b);             //2             
 329   2          LCD_DrawPoint(x0+b,y0+a);             //4               
 330   2          LCD_DrawPoint(x0+a,y0-b);             //5
 331   2          LCD_DrawPoint(x0+a,y0+b);             //6 
 332   2          LCD_DrawPoint(x0-b,y0+a);             
 333   2          a++;
 334   2          //使用Bresenham算法画圆     
 335   2          if(di<0)di +=4*a+6;   
 336   2          else
 337   2          {
 338   3            di+=10+4*(a-b);   
 339   3            b--;
 340   3          } 
 341   2          LCD_DrawPoint(x0+a,y0+b);
 342   2        }
 343   1      } 
 344          //在指定位置显示一个字符
 345          
 346          //num:要显示的字符:" "--->"~"
 347          //mode:叠加方式(1)还是非叠加方式(0)
 348          //在指定位置显示一个字符
 349          
 350          //num:要显示的字符:" "--->"~"
 351          
 352          //mode:叠加方式(1)还是非叠加方式(0)
 353          void LCD_ShowChar(u16 x,u16 y,u8 num,u8 mode)
 354          {
 355   1          u8 temp;
 356   1          u8 pos,t;
 357   1        u16 x0=x;
 358   1        u16 colortemp=POINT_COLOR;      
 359   1          if(x>LCD_W-16||y>LCD_H-16)return;     
 360   1        //设置窗口       
 361   1        num=num-' ';//得到偏移后的值
 362   1        Address_set(x,y,x+8-1,y+16-1);      //设置光标位置 
 363   1        if(!mode) //非叠加方式
 364   1        {
C51 COMPILER V9.54   LCD                                                                   10/13/2015 11:38:06 PAGE 7   

 365   2          for(pos=0;pos<16;pos++)
 366   2          { 
 367   3            temp=asc2_1608[(u16)num*16+pos];     //调用1608字体
 368   3            for(t=0;t<8;t++)
 369   3              {                 
 370   4                  if(temp&0x01)POINT_COLOR=colortemp;
 371   4              else POINT_COLOR=BACK_COLOR;
 372   4              LCD_WR_DATA(POINT_COLOR); 
 373   4              temp>>=1; 
 374   4              x++;
 375   4              }
 376   3            x=x0;
 377   3            y++;
 378   3          } 
 379   2        }else//叠加方式
 380   1        {
 381   2          for(pos=0;pos<16;pos++)
 382   2          {
 383   3              temp=asc2_1608[(u16)num*16+pos];     //调用1608字体
 384   3            for(t=0;t<8;t++)
 385   3              {                 
 386   4                  if(temp&0x01)LCD_DrawPoint(x+t,y+pos);//画一个点     
 387   4                  temp>>=1; 
 388   4              }
 389   3          }
 390   2        }
 391   1        POINT_COLOR=colortemp;                
 392   1      }   
 393          //m^n函数
 394          u32 mypow(u8 m,u8 n)
 395          {
 396   1        u32 result=1;  
 397   1        while(n--)result*=m;    
 398   1        return result;
 399   1      }      
 400          //显示2个数字
 401          //x,y :起点坐标  
 402          //len :数字的位数
 403          //color:颜色
 404          //num:数值(0~4294967295); 
 405          void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len)
 406          {           
 407   1        u8 t,temp;
 408   1        u8 enshow=0;
 409   1        num=(u16)num;
 410   1        for(t=0;t<len;t++)
 411   1        {
 412   2          temp=(num/mypow(10,len-t-1))%10;
 413   2          if(enshow==0&&t<(len-1))
 414   2          {
 415   3            if(temp==0)
 416   3            {
 417   4              LCD_ShowChar(x+8*t,y,' ',0);
 418   4              continue;
 419   4            }else enshow=1; 
 420   3             
 421   3          }
 422   2          LCD_ShowChar(x+8*t,y,temp+48,0); 
 423   2        }
 424   1      } 
 425          //显示2个数字
 426          //x,y:起点坐标
C51 COMPILER V9.54   LCD                                                                   10/13/2015 11:38:06 PAGE 8   

 427          //num:数值(0~99);  
 428          void LCD_Show2Num(u16 x,u16 y,u16 num,u8 len)
 429          {           
 430   1        u8 t,temp;               
 431   1        for(t=0;t<len;t++)
 432   1        {
 433   2          temp=(num/mypow(10,len-t-1))%10;
 434   2          LCD_ShowChar(x+8*t,y,temp+'0',0); 
 435   2        }
 436   1      } 
 437          //显示字符串
 438          //x,y:起点坐标  
 439          //*p:字符串起始地址
 440          //用16字体
 441          void LCD_ShowString(u16 x0,u16 y0,const u8 *pcStr)
 442          { 
 443   1        //while(*pcStr!='\0')
 444   1        while(*pcStr)
 445   1        {
 446   2         // if(*pcStr>0x80) /*??ê?oo×?*/0xa1
 447   2          if(*pcStr>0xa1) /*??ê?oo×?*/
 448   2          {
 449   3            //LCD_ShowHzString(x0, y0, pcStr);
 450   3            //pcStr += 2;
 451   3            //x0 += 16; 
 452   3          }
 453   2          else           /*??ê?×?・?*/
 454   2          {
 455   3            LCD_ShowChar(x0, y0, *pcStr, 0);  
 456   3            pcStr +=1;
 457   3            x0+= 8;
 458   3          }
 459   2        
 460   2        }        
 461   1       /*  
 462   1         while(*p!='\0')
 463   1          {       
 464   1              if(x>LCD_W-16){x=0;y+=16;}
 465   1              if(y>LCD_H-16){y=x=0;LCD_Clear(RED);}
 466   1              LCD_ShowChar(x,y,*p,0);
 467   1              x+=8;
 468   1              p++;
 469   1          }  
 470   1        u16 x0=x;
 471   1      
 472   1        while(*p)
 473   1        {
 474   1          
 475   1            LCD_ShowChar(x0, y, p); 
 476   1            p +=1;
 477   1            x0+= 8;
 478   1          } 
 479   1      */
 480   1      }
 481          
 482          
 483          
 484          
 485          
 486          
 487          
 488          
C51 COMPILER V9.54   LCD                                                                   10/13/2015 11:38:06 PAGE 9   

 489          
 490          
 491          
 492          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3240    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =     22     125
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
